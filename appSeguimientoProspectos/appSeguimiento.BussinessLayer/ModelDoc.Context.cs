//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace appSeguimiento.BussinessLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class prospectosEntities : DbContext
    {
        public prospectosEntities()
            : base("name=prospectosEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<documentos_prospectos> documentos_prospectos { get; set; }
    
        public virtual int sp_insertarDocumento(Nullable<int> idDocumento, Nullable<int> idProspecto, string nombreDocumento, byte[] documento)
        {
            var idDocumentoParameter = idDocumento.HasValue ?
                new ObjectParameter("idDocumento", idDocumento) :
                new ObjectParameter("idDocumento", typeof(int));
    
            var idProspectoParameter = idProspecto.HasValue ?
                new ObjectParameter("idProspecto", idProspecto) :
                new ObjectParameter("idProspecto", typeof(int));
    
            var nombreDocumentoParameter = nombreDocumento != null ?
                new ObjectParameter("nombreDocumento", nombreDocumento) :
                new ObjectParameter("nombreDocumento", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("documento", documento) :
                new ObjectParameter("documento", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertarDocumento", idDocumentoParameter, idProspectoParameter, nombreDocumentoParameter, documentoParameter);
        }
    
        public virtual ObjectResult<sp_obtenerDocsProspecto_Result> sp_obtenerDocsProspecto(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_obtenerDocsProspecto_Result>("sp_obtenerDocsProspecto", iDParameter);
        }
    }
}
